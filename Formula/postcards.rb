# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Postcards < Formula
  desc "Tool for creating digital versions of physical postcards"
  homepage "https://dotpostcards.org/cli/postcards"
  version "0.4.0"
  license "MIT"

  on_macos do
    on_intel do
      url "https://github.com/jphastings/dotpostcard/releases/download/0.4.0/dotpostcard_Darwin_x86_64.tar.gz"
      sha256 "7d8314dd3106cca460975403a7ff417aea4fa4ef308d359d4fc7b7989f632e7d"

      def install
        bin.install "postcards"
      end
    end
    on_arm do
      url "https://github.com/jphastings/dotpostcard/releases/download/0.4.0/dotpostcard_Darwin_arm64.tar.gz"
      sha256 "d2a2ca2330c4ee66693219c1f69148734b4ccf72037757631bbb0393d1dec8f7"

      def install
        bin.install "postcards"
      end
    end
  end

  on_linux do
    on_intel do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/jphastings/dotpostcard/releases/download/0.4.0/dotpostcard_Linux_x86_64.tar.gz"
        sha256 "0839352ac71b36fabfdc33c61585bdad864e27351799125fdb682ce850e75340"

        def install
          bin.install "postcards"
        end
      end
    end
    on_arm do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/jphastings/dotpostcard/releases/download/0.4.0/dotpostcard_Linux_arm64.tar.gz"
        sha256 "16451db8eb56b61685aee4dd43c412051a97399eca90d7246c24015610452861"

        def install
          bin.install "postcards"
        end
      end
    end
  end

  test do
    resource("hello.postcard").stage do
      expected_start = "Convert digital representations of postcards between various formats.\n"
      actual_output = shell_output("#{bin}/postcards help")
      assert actual_output.start_with?(expected_start)
    end
  end
end
