# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class MelaStandardize < Formula
  desc "Standardize Mela recipe files."
  homepage "https://github.com/jphastings/mela-recipes/"
  version "0.0.2"
  license "MIT"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/jphastings/mela-recipes/releases/download/v0.0.2/mela-standardize_Darwin_x86_64.tar.gz", using: CurlDownloadStrategy
      sha256 "d9caef6eec6082df0f48601ca69b58e50ea9c194b5270c1f2c93da428c4740f5"

      def install
        bin.install "mela-standardize"
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/jphastings/mela-recipes/releases/download/v0.0.2/mela-standardize_Darwin_arm64.tar.gz", using: CurlDownloadStrategy
      sha256 "7424c7feaa4df0af2687984b540c1e22bd69de6fe8060b2f18effee6993180a9"

      def install
        bin.install "mela-standardize"
      end
    end
  end

  on_linux do
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/jphastings/mela-recipes/releases/download/v0.0.2/mela-standardize_Linux_arm64.tar.gz", using: CurlDownloadStrategy
      sha256 "d501cd9cd996be901bd06de4e48fd221c45319390ca271cfca2f37cf06fe70cf"

      def install
        bin.install "mela-standardize"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/jphastings/mela-recipes/releases/download/v0.0.2/mela-standardize_Linux_x86_64.tar.gz", using: CurlDownloadStrategy
      sha256 "9642e4896a1635d448f9a8d0d1e9af01f6b9d0fca58b81d6e0bca3d31bb87a24"

      def install
        bin.install "mela-standardize"
      end
    end
  end

  resource("test.melarecipes") do
    url "https://raw.githubusercontent.com/jphastings/mela-recipes/main/fixtures/a+b.melarecipes"
    sha256 "4f72c6ffb2f126adf5df5d79311dfec2335b463da16fe26deff19bdd5579e1b2"
  end

  test do
    resource("test.melarecipes").stage do
      shell_output("#{bin}/mela-standardize test.melarecipes \"#{testpath}\"")
      assert_predicate testpath/"example.com/a-title.melarecipe", :exist?
      assert_predicate testpath/"example.com/b-title.melarecipe", :exist?
    end
  end
end
