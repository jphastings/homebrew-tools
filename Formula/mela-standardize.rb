# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class MelaStandardize < Formula
  desc "Standardize Mela recipe files."
  homepage "https://github.com/jphastings/mela-recipes/"
  version "0.0.5"
  license "MIT"

  on_macos do
    on_intel do
      url "https://github.com/jphastings/mela-recipes/releases/download/v0.0.5/mela-standardize_Darwin_x86_64.tar.gz", using: CurlDownloadStrategy
      sha256 "870e54dd61d936dad76046e6c363fa98c44a16981c3beca91344eaa02e1ac5bb"

      def install
        bin.install "mela-standardize"
      end
    end
    on_arm do
      url "https://github.com/jphastings/mela-recipes/releases/download/v0.0.5/mela-standardize_Darwin_arm64.tar.gz", using: CurlDownloadStrategy
      sha256 "8ff7971325f4c47d4be323833857408d50bef6c3733146686edba34aa68cc076"

      def install
        bin.install "mela-standardize"
      end
    end
  end

  on_linux do
    on_intel do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/jphastings/mela-recipes/releases/download/v0.0.5/mela-standardize_Linux_x86_64.tar.gz", using: CurlDownloadStrategy
        sha256 "7ab604b22d1bd1bb21f31ef562f94facd630871bd846553cd3f6b00328232ca4"

        def install
          bin.install "mela-standardize"
        end
      end
    end
    on_arm do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/jphastings/mela-recipes/releases/download/v0.0.5/mela-standardize_Linux_arm64.tar.gz", using: CurlDownloadStrategy
        sha256 "fd2456c603498ade4a6240d4a6263f790950bba0fe76540ab1f6d2e4d6c235a6"

        def install
          bin.install "mela-standardize"
        end
      end
    end
  end

  resource("test.melarecipes") do
    url "https://raw.githubusercontent.com/jphastings/mela-recipes/main/fixtures/a+b.melarecipes"
    sha256 "4f72c6ffb2f126adf5df5d79311dfec2335b463da16fe26deff19bdd5579e1b2"
  end

  test do
    resource("test.melarecipes").stage do
      shell_output("#{bin}/mela-standardize test.melarecipes \"#{testpath}\"")
      assert_predicate testpath/"example.com/a-title.melarecipe", :exist?
      assert_predicate testpath/"example.com/b-title.melarecipe", :exist?
    end
  end
end
