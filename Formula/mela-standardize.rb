# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class MelaStandardize < Formula
  desc "Standardize Mela recipe files."
  homepage "https://github.com/jphastings/mela-recipes/"
  version "0.0.3"
  license "MIT"

  on_macos do
    if Hardware::CPU.arm?
      url "https://github.com/jphastings/mela-recipes/releases/download/v0.0.3/mela-standardize_Darwin_arm64.tar.gz", using: CurlDownloadStrategy
      sha256 "430835ad55cb4299eb56ba8cae050f23aa1c0bf4460173abfd933e9d695ffe97"

      def install
        bin.install "mela-standardize"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/jphastings/mela-recipes/releases/download/v0.0.3/mela-standardize_Darwin_x86_64.tar.gz", using: CurlDownloadStrategy
      sha256 "0d93554e14a57d6d76a3395d5e29dd03bb16f5666030a5cb481e0e4de231b598"

      def install
        bin.install "mela-standardize"
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/jphastings/mela-recipes/releases/download/v0.0.3/mela-standardize_Linux_x86_64.tar.gz", using: CurlDownloadStrategy
      sha256 "9291da092a9faad15f51fd4af87dc33c4e79c759359032ebdbd41f3a9f04a40b"

      def install
        bin.install "mela-standardize"
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/jphastings/mela-recipes/releases/download/v0.0.3/mela-standardize_Linux_arm64.tar.gz", using: CurlDownloadStrategy
      sha256 "a8e1b0de1b28ac67acc8c8835f9479c2735e7a9c30ad41fbaca74d33e7a801e1"

      def install
        bin.install "mela-standardize"
      end
    end
  end

  resource("test.melarecipes") do
    url "https://raw.githubusercontent.com/jphastings/mela-recipes/main/fixtures/a+b.melarecipes"
    sha256 "4f72c6ffb2f126adf5df5d79311dfec2335b463da16fe26deff19bdd5579e1b2"
  end

  test do
    resource("test.melarecipes").stage do
      shell_output("#{bin}/mela-standardize test.melarecipes \"#{testpath}\"")
      assert_predicate testpath/"example.com/a-title.melarecipe", :exist?
      assert_predicate testpath/"example.com/b-title.melarecipe", :exist?
    end
  end
end
