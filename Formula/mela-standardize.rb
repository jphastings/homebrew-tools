# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class MelaStandardize < Formula
  desc "Standardize Mela recipe files."
  homepage "https://github.com/jphastings/mela-recipes/"
  version "0.0.7"
  license "MIT"

  on_macos do
    on_intel do
      url "https://github.com/jphastings/mela-recipes/releases/download/v0.0.7/mela-standardize_Darwin_x86_64.tar.gz", using: CurlDownloadStrategy
      sha256 "350fa2d514ede564d75246f95eec6aaf837722cfd51cd87b1214c46d1671c9e5"

      def install
        bin.install "mela-standardize"
      end
    end
    on_arm do
      url "https://github.com/jphastings/mela-recipes/releases/download/v0.0.7/mela-standardize_Darwin_arm64.tar.gz", using: CurlDownloadStrategy
      sha256 "e456786d466ee321d4c0cfbfb595555612b2eea47031b966c7b9890cec2135c4"

      def install
        bin.install "mela-standardize"
      end
    end
  end

  on_linux do
    on_intel do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/jphastings/mela-recipes/releases/download/v0.0.7/mela-standardize_Linux_x86_64.tar.gz", using: CurlDownloadStrategy
        sha256 "3cce3702331876bcbf9c9fa299e00d1d6fea74088f2ae6245bd617ab27e503a2"

        def install
          bin.install "mela-standardize"
        end
      end
    end
    on_arm do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/jphastings/mela-recipes/releases/download/v0.0.7/mela-standardize_Linux_arm64.tar.gz", using: CurlDownloadStrategy
        sha256 "3b55442f6bcf42e7bcd1f4d42ec3301856067b007c3620808b12fb602bd832bc"

        def install
          bin.install "mela-standardize"
        end
      end
    end
  end

  resource("test.melarecipes") do
    url "https://raw.githubusercontent.com/jphastings/mela-recipes/main/fixtures/a+b.melarecipes"
    sha256 "4f72c6ffb2f126adf5df5d79311dfec2335b463da16fe26deff19bdd5579e1b2"
  end

  test do
    resource("test.melarecipes").stage do
      shell_output("#{bin}/mela-standardize test.melarecipes \"#{testpath}\"")
      assert_predicate testpath/"example.com/a-title.melarecipe", :exist?
      assert_predicate testpath/"example.com/b-title.melarecipe", :exist?
    end
  end
end
