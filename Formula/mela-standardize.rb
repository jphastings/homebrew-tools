# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class MelaStandardize < Formula
  desc "Standardize Mela recipe files."
  homepage "https://github.com/jphastings/mela-recipes/"
  version "0.0.6"
  license "MIT"

  on_macos do
    on_intel do
      url "https://github.com/jphastings/mela-recipes/releases/download/v0.0.6/mela-standardize_Darwin_x86_64.tar.gz", using: CurlDownloadStrategy
      sha256 "4806a18fb2068e0b2361d899bae9a0ac0b39fffb0a08aca9be2e27f234d4054d"

      def install
        bin.install "mela-standardize"
      end
    end
    on_arm do
      url "https://github.com/jphastings/mela-recipes/releases/download/v0.0.6/mela-standardize_Darwin_arm64.tar.gz", using: CurlDownloadStrategy
      sha256 "173bf04b829e3d480ad799f3081a70f2bdda843e7df6051d6d9b13dbb5783d3a"

      def install
        bin.install "mela-standardize"
      end
    end
  end

  on_linux do
    on_intel do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/jphastings/mela-recipes/releases/download/v0.0.6/mela-standardize_Linux_x86_64.tar.gz", using: CurlDownloadStrategy
        sha256 "90be26dc114cfa0e9f339319ffcb1c0b98580e0019c61f0485ad26e9c94d75c7"

        def install
          bin.install "mela-standardize"
        end
      end
    end
    on_arm do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/jphastings/mela-recipes/releases/download/v0.0.6/mela-standardize_Linux_arm64.tar.gz", using: CurlDownloadStrategy
        sha256 "ee9e7e1275633f56e27d08d0f12744d52d1622a9e1c0b8fe13480e932b3cd178"

        def install
          bin.install "mela-standardize"
        end
      end
    end
  end

  resource("test.melarecipes") do
    url "https://raw.githubusercontent.com/jphastings/mela-recipes/main/fixtures/a+b.melarecipes"
    sha256 "4f72c6ffb2f126adf5df5d79311dfec2335b463da16fe26deff19bdd5579e1b2"
  end

  test do
    resource("test.melarecipes").stage do
      shell_output("#{bin}/mela-standardize test.melarecipes \"#{testpath}\"")
      assert_predicate testpath/"example.com/a-title.melarecipe", :exist?
      assert_predicate testpath/"example.com/b-title.melarecipe", :exist?
    end
  end
end
